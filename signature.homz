<html>
<head>
    <title>Signature Homz - Estate Properties App</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.3/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: url('https://example.com/background.jpg') no-repeat center center fixed;
            background-size: cover;
            color: #e0e1dd;
        }
        h1 {
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
        }
        .form-container {
            background: rgba(0, 0, 0, 0.6);
        }
        .footer-link:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col justify-between">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-center mb-8">Signature Homz Estate Properties Management</h1>
        <form id="property-form" class="space-y-6 p-6 form-container rounded-lg shadow-lg">
            <div>
                <label for="property-type" class="block mb-1">Property Type</label>
                <input type="text" id="property-type" class="w-full px-4 py-2 bg-gray-800 rounded-lg text-white" placeholder="e.g., Residential">
            </div>
            <div>
                <label for="property-location" class="block mb-1">Property Location</label>
                <input type="text" id="property-location" class="w-full px-4 py-2 bg-gray-800 rounded-lg text-white" placeholder="Mumbai" value="Mumbai" readonly>
            </div>
            <div>
                <label for="property-description" class="block mb-1">Description of Property</label>
                <textarea id="property-description" class="w-full h-24 px-4 py-2 bg-gray-800 rounded-lg text-white" placeholder="Describe the property"></textarea>
            </div>
            <div>
                <label for="dashboard" class="block mb-1">Dashboard</label>
                <input type="text" id="dashboard" class="w-full px-4 py-2 bg-gray-800 rounded-lg text-white" placeholder="e.g., access control">
            </div>
            <div>
                <label for="login" class="block mb-1">Login</label>
                <input type="text" id="login" class="w-full px-4 py-2 bg-gray-800 rounded-lg text-white" placeholder="e.g., username and password">
            </div>
            <div>
                <label for="contact-detail" class="block mb-1">Contact Detail</label>
                <input type="text" id="contact-detail" class="w-full px-4 py-2 bg-gray-800 rounded-lg text-white" placeholder="e.g., email@example.com">
            </div>
            <div>
                <label for="authorized-member" class="block mb-1">Authorized Member</label>
                <input type="text" id="authorized-member" class="w-full px-4 py-2 bg-gray-800 rounded-lg text-white" placeholder="e.g., John Doe">
            </div>
            <button type="button" id="submit-btn" class="w-full bg-indigo-700 hover:bg-indigo-600 text-white font-bold py-2 px-4 rounded-lg">Let's Build a Property Empire!</button>
        </form>
        <div id="output" class="mt-8 p-4 bg-gray-900 rounded-lg text-white"></div>
    </div>
    <footer class="text-center py-4 bg-gray-800">
        <a href="#" class="text-white footer-link">Made with ❤️ by Signature Homz</a>
    </footer>
    <script>
        const form = document.getElementById('property-form');
        const output = document.getElementById('output');

        document.getElementById('submit-btn').addEventListener('click', () => {
            const propertyType = document.getElementById('property-type').value;
            const propertyLocation = "Mumbai"; // Hardcoded as Mumbai
            const propertyDescription = document.getElementById('property-description').value;
            const dashboard = document.getElementById('dashboard').value;
            const login = document.getElementById('login').value;
            const contactDetail = document.getElementById('contact-detail').value;
            const authorizedMember = document.getElementById('authorized-member').value;
            
            const substitutedPrompt = `Create a professional estates properties dealing app that allows ${authorizedMember} to manage ${propertyType} listings in ${propertyLocation}. Provide a ${propertyDescription} and allow users to ${login} to access the ${dashboard}. Include a ${contactDetail} section for inquiries.`;
            
            const websocket = new WebSocket('wss://backend.buildpicoapps.com/ask_ai_streaming_v2');

            websocket.addEventListener("open", () => {
                websocket.send(
                    JSON.stringify({
                        appId: "reach-man",
                        prompt: substitutedPrompt,
                    })
                );
            });

            output.innerText = ''; // Clear output section

            websocket.addEventListener("message", (event) => {
                console.log(event.data);
                output.innerText = `${output.innerText}${event.data}`;
            });

            websocket.addEventListener("close", (event) => {
                console.log("Connection closed", event.code, event.reason);
                if (event.code != 1000) {
                    alert("Oops, we ran into an error. Refresh the page and try again.");
                }
            });

            websocket.addEventListener("error", (error) => {
              console.log('WebSocket error', error);
              alert("Oops, we ran into an error. Refresh the page and try again.");
            });
        });
    </script>
</body>
</html>
